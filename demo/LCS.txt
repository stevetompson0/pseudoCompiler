function LCS_LENGTH(x, y)
    m = len(x)
    n = len(y)
    b = StringMatrix(n+1,m+1,0) #String matrix
    b.setTopHeader(x)
    b.setLeftHeader(y)

    for i = 1 to n+1
        for j = 1 to m+1
            if x[j-1] == y[i-1]
                b[i][j] = b[i-1][j-1] + 1
                b.addEdge(i-1,j-1,i,j)
            else if b[i-1][j] >= b[i][j-1]
                b[i][j] = b[i-1][j]
                b.addEdge(i-1,j,i,j)
            else
                b[i][j] = b[i][j-1]
                b.addEdge(i,j-1,i,j)
    return b

function backtrace(b, seq1)
    sequence = ""
    i = b.nrows-1 #number of rows
    j = b.ncols-1 #number of columns

    while i != 0 and j != 0
        if b.hasEdge(i,j, i-1,j-1)
            sequence = seq1[j-1] + sequence #because b.nrows-1 = len(seq1)
            i = i -1
            j = j -1
        else if b.hasEdge(i,j, i-1,j)
            i = i -1
        else
            j = j -1
    return sequence


seq1 = 'ABCBDAB'
seq2 = 'BDCABA'

b = LCS_LENGTH(seq1, seq2)
lcs = backtrace(b, seq1)
